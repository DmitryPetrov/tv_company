<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE mapper PUBLIC '-//mybatis.org//DTD Mapper 3.0//EN'
  'http://mybatis.org/dtd/mybatis-3-mapper.dtd'>

<mapper namespace='com.example.name.mapper.ChennelMapper'>

	<select id='getById' parameterType='long'
		resultType='com.example.name.model.Chennel'>
		SELECT
			id as id,
			name as name,
			description as description
		FROM
			tv_chennel
		WHERE
			id = #{id}
	</select>
	<!-- Instead of referencing Fully Qualified Class Names we can register 
		Aliases in mybatis-config.xml and use Alias names. -->
	<resultMap type='Chennel' id='UserResult'>
		<id property='id' column='id' />
		<result property='name' column='name' />
		<result property='description' column='description' />
	</resultMap>

	<select id='getFavoriteChannelForSubscriber' parameterType='long'
		resultType='com.example.name.model.Chennel'>
		SELECT
			id as id,
			name as name,
			description as description
		FROM
			tv_chennel 
		WHERE
			id IN (SELECT
						id_chennel
					FROM
						favorite_chennel 
					WHERE
						id_subscriber = #{id})
	</select>


	<select id='getAll' resultMap='UserResult'>
		SELECT
			*
		FROM
			tv_chennel 
	</select>

	<insert id='insert' parameterType='Chennel'
		useGeneratedKeys='true' keyProperty='id'>
		INSERT INTO
			tv_chennel (name, description)
		VALUES
			(#{name}, #{description})
		ON CONFLICT DO NOTHING
	</insert>

	<update id='update' parameterType='Chennel'>
		UPDATE 
			tv_chennel 
		SET
			name = #{name},
			description = #{description}
		WHERE
			id = #{id}
	</update>

	<delete id='delete' parameterType='long'>
		DELETE FROM
			tv_chennel 
		WHERE
			id = #{id}
	</delete>

</mapper>